name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (Django)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydb
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # âœ… Updated from 3.1 to 3.10

      - name: Install dependencies
        working-directory: world_map_app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        working-directory: world_map_app
        env:
          DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydb
        run: |
          python manage.py migrate
          python manage.py test

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: world_map_app/frontend/world-map-app
        run: npm install

      - name: Run React Build
        working-directory: world_map_app/frontend/world-map-app
        run: npm run build
